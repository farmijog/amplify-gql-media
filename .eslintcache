[{"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\index.js":"1","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\reportWebVitals.js":"2","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\App.js":"3","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\aws-exports.js":"4","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\queries.js":"5","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\mutations.js":"6","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\subscriptions.js":"7","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\Auth\\Auth.js":"8","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\Auth.js":"9","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\pages\\Landing.js":"10","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\SignIn.js":"11","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\private\\Home.js":"12","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\utils\\CheckUser.js":"13","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\private\\ProtectedRoute.js":"14","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\SignUp.js":"15","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostCard.js":"16","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostForm.js":"17","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\Navbar.js":"18","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\context\\AppProvider.js":"19","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\ThemeToggle.js":"20","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\styles\\Theme.js":"21","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostDetail.js":"22","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentForm.js":"23","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentCard.js":"24","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentDeleteButton.js":"25","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostDeleteButton.js":"26","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\DropMenu.js":"27","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostNotFound.js":"28"},{"size":346,"mtime":1612574558545,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1187,"mtime":1614437567379,"results":"32","hashOfConfig":"30"},{"size":805,"mtime":1613489122936,"results":"33","hashOfConfig":"30"},{"size":1668,"mtime":1614089671350,"results":"34","hashOfConfig":"30"},{"size":2812,"mtime":1613489119735,"results":"35","hashOfConfig":"30"},{"size":2084,"mtime":1614269869214,"results":"36","hashOfConfig":"30"},{"size":4775,"mtime":1611951071381,"results":"37","hashOfConfig":"30"},{"size":4775,"mtime":1612039425700,"results":"38","hashOfConfig":"30"},{"size":154,"mtime":1611951970996,"results":"39","hashOfConfig":"30"},{"size":4524,"mtime":1614349306538,"results":"40","hashOfConfig":"30"},{"size":3363,"mtime":1614439019479,"results":"41","hashOfConfig":"30"},{"size":195,"mtime":1612034320125,"results":"42","hashOfConfig":"30"},{"size":863,"mtime":1612035998689,"results":"43","hashOfConfig":"30"},{"size":8833,"mtime":1614351060414,"results":"44","hashOfConfig":"30"},{"size":2167,"mtime":1614284438410,"results":"45","hashOfConfig":"30"},{"size":4019,"mtime":1614280750368,"results":"46","hashOfConfig":"30"},{"size":1341,"mtime":1614438930123,"results":"47","hashOfConfig":"30"},{"size":1456,"mtime":1614348866233,"results":"48","hashOfConfig":"30"},{"size":530,"mtime":1612576495245,"results":"49","hashOfConfig":"30"},{"size":455,"mtime":1612577733677,"results":"50","hashOfConfig":"30"},{"size":5981,"mtime":1614440382727,"results":"51","hashOfConfig":"30"},{"size":2140,"mtime":1614261965055,"results":"52","hashOfConfig":"30"},{"size":962,"mtime":1614280822162,"results":"53","hashOfConfig":"30"},{"size":2396,"mtime":1614279618522,"results":"54","hashOfConfig":"30"},{"size":2493,"mtime":1614283899332,"results":"55","hashOfConfig":"30"},{"size":3481,"mtime":1614445260972,"results":"56","hashOfConfig":"30"},{"size":4021,"mtime":1614459195535,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1p9w3eb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\index.js",[],["126","127"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\reportWebVitals.js",[],["128","129"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\App.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\aws-exports.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\queries.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\mutations.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\graphql\\subscriptions.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\Auth\\Auth.js",["130","131"],"import React, { useEffect, useState } from \"react\";\r\nimport { Auth, Hub } from \"aws-amplify\";\r\nimport { TextField, Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formStyle: {\r\n        marginTop: 10,\r\n        fontFamily: \"Google Sans, Arial\",\r\n        textTransform: \"none\"\r\n    }\r\n}))\r\n\r\nconst initialFormState = {\r\n    username: \"\", password: \"\", email: \"\", authCode: \"\", formType: \"signUp\"\r\n}\r\n\r\nfunction AuthComponent() {\r\n    const classes = useStyles();\r\n    const [formState, updateFormState] = useState(initialFormState);\r\n    const [user, updateUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        checkUser();\r\n        setAuthListener();\r\n    }, [])\r\n\r\n    async function setAuthListener() {\r\n        Hub.listen('auth', (data) => {\r\n            switch (data.payload.event) {\r\n                case 'signOut':\r\n                    updateFormState(() => ({ ...formState, formType: \"signUp\" }));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    async function checkUser() {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser();\r\n            updateUser(user);\r\n            updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    function onChange(e) {\r\n        e.persist();\r\n        updateFormState(() => ({ ...formState, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    const { formType } = formState;\r\n    async function signUp() {\r\n        const { username, email, password } = formState;\r\n        await Auth.signUp({ username, password, attributes: { email } });\r\n        updateFormState(() => ({ ...formState, formType: \"confirmSignUp\" }));\r\n    }\r\n\r\n    async function confirmSignUp() {\r\n        const { username, authCode } = formState;\r\n        await Auth.confirmSignUp(username, authCode);\r\n        updateFormState(() => ({ ...formState, formType: \"signIn\" }));\r\n    }\r\n\r\n    async function signIn() {\r\n        const { username, password } = formState;\r\n        await Auth.signIn(username, password);\r\n        updateFormState(() => ({ ...formState, formType: \"signedIn\" }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                formType === \"signUp\" && (\r\n                    <div className={classes.formStyle} >\r\n                        <TextField name=\"username\" onChange={onChange} label=\"username\" variant=\"outlined\" size=\"small\" />\r\n                        <TextField name=\"password\" type=\"password\" onChange={onChange} label=\"password\" variant=\"outlined\" size=\"small\" />\r\n                        <TextField name=\"email\" onChange={onChange} label=\"email\" variant=\"outlined\" size=\"small\" />\r\n                        <Button variant=\"contained\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={signUp}>Sign Up</Button>\r\n                        <Button variant=\"contained\" color=\"primary\" style={{ textTransform: \"none\" }}\r\n                            onClick={() => updateFormState(() => ({ ...formState, formType: \"signIn\" }))}\r\n                        >Sign In</Button>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                formType === \"confirmSignUp\" && (\r\n                    <div className={classes.formStyle} >\r\n                        <TextField name=\"authCode\" onChange={onChange} label=\"code\" variant=\"outlined\" size=\"small\" />\r\n                        <Button variant=\"contained\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={confirmSignUp}>Confirm Sign Up</Button>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                formType === \"signIn\" && (\r\n                    <div className={classes.formStyle} >\r\n                        <TextField name=\"username\" onChange={onChange} label=\"username\" variant=\"outlined\" size=\"small\" />\r\n                        <TextField name=\"password\" type=\"password\" onChange={onChange} label=\"password\" variant=\"outlined\" size=\"small\" />\r\n                        <Button variant=\"contained\" color=\"primary\" style={{ textTransform: \"none\" }} onClick={signIn}>Sign In</Button>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                formType === \"signedIn\" && (\r\n                    <div>\r\n                        <h1>hey, welcome back!</h1>\r\n                        <Button variant=\"contained\" color=\"primary\" style={{ textTransform: \"none\" }}\r\n                            onClick={() => Auth.signOut()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthComponent;",["132","133"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\Auth.js",["134","135"],["136","137"],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\pages\\Landing.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\SignIn.js",["138","139"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Button, Card, CircularProgress, Link, TextField, Typography } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport { AppContext } from \"../../context/AppProvider\";\r\n\r\nconst initialState = { username: \"\", password: \"\" };\r\n\r\nfunction SignIn() {\r\n    const { setUserContext } = useContext(AppContext);\r\n    const history = useHistory();\r\n    const [input, setInput] = useState(initialState);\r\n    const [user, setUser] = useState(null);\r\n    const [errors, setErrors] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkIfUserExists();\r\n    }, [])\r\n\r\n    const checkIfUserExists = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser();\r\n            setUser(user);\r\n            setUserContext(user);\r\n            if (user) {\r\n                history.push(\"/home\");\r\n            }\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInput(() => ({ ...input, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    const signIn = async () => {\r\n        const { username, password } = input;\r\n        if (username.trim() === \"\" || password.trim() === \"\") return;\r\n        if (username === \"\" || password === \"\") return;\r\n        try {\r\n            setLoading(true);\r\n            const userLoggedIn = await Auth.signIn(username, password);\r\n            setUserContext(userLoggedIn);\r\n            setInput(() => ({ ...input, username: \"\", password: \"\" }));\r\n            setLoading(false);\r\n            history.push(\"/home\");\r\n        } catch (error) {\r\n            console.log(\"Error while signin: \", error);\r\n            setErrors(error.message);\r\n            setLoading(false);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: 20 }} >\r\n            <Card\r\n                elevation={3}\r\n                style={{\r\n                    width: \"100%\",\r\n                    maxWidth: 600,\r\n                    padding: 15,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\"\r\n                    \r\n                }}\r\n            >\r\n                <Typography style={{ marginBottom: 10 }}>\r\n                    Sign In\r\n                </Typography>\r\n                <TextField \r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    onChange={onChange}\r\n                    style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                />\r\n                <TextField \r\n                    type=\"password\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    label=\"password\"\r\n                    name=\"password\"\r\n                    onChange={onChange}\r\n                    style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                <Typography variant=\"body2\" style={{ marginBottom: 15 }}>\r\n                                    Don't have an account?\r\n                                </Typography>\r\n                                &nbsp;\r\n                                <Link href=\"/signup\">Sign up</Link>\r\n                            </div>\r\n                {loading ? (\r\n                    <CircularProgress />\r\n                ) : (\r\n                    <Button\r\n                        style={{ width: 300, textTransform: \"none\", borderRadius: 50, marginBottom: 10 }}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={signIn}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                )}\r\n            </Card>\r\n            \r\n            {\r\n                errors && (\r\n                    <div style={{ width: \"100%\", maxWidth: 600, paddingTop: 20 }}>\r\n                        <Alert severity=\"error\">\r\n                            <AlertTitle> {errors} </AlertTitle>\r\n                        </Alert>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\private\\Home.js",["140"],"import React, { useContext, useState, useEffect, useReducer } from \"react\";\r\nimport { API, graphqlOperation, Storage } from \"aws-amplify\";\r\nimport { CircularProgress as Loading, Grid } from \"@material-ui/core\";\r\n\r\nimport * as queries from \"../../graphql/queries\";\r\nimport * as subscriptions from \"../../graphql/subscriptions\"\r\nimport { AppContext } from \"../../context/AppProvider\";\r\nimport PostCard from \"../post/PostCard\";\r\nimport PostForm from \"../post/PostForm\";\r\n\r\nconst initialState = {\r\n    message: \"\", posts: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case \"SET_POSTS\":\r\n            return { ...state, posts: action.posts }\r\n        // case \"SET_INPUT\":\r\n        //     return { ...state, [action.key]: action.value }\r\n        // case \"CLEAR_INPUT\":\r\n        //     return { ...initialState, posts: state.posts }\r\n        case \"ADD_POST\":\r\n            return { ...state, posts: [...state.posts, action.post] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction Home() {\r\n    const { user } = useContext(AppContext);\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n        const subscription = API.graphql(graphqlOperation(subscriptions.onCreatePost)).subscribe({\r\n            next: ({ value }) => \r\n            {\r\n                const post = value.data.onCreatePost\r\n                dispatch({ type: \"ADD_POST\", post })\r\n            }\r\n        })\r\n        return () => subscription.unsubscribe();\r\n    }, [])\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const postData = await API.graphql(graphqlOperation(queries.listPosts));\r\n            const postsFromAPI = postData.data.listPosts.items;\r\n            await Promise.all(postsFromAPI.map(async post => {\r\n                if (post.image) {\r\n                    const image = await Storage.get(post.image);\r\n                    post.image = image;\r\n                }\r\n                // return image;\r\n            }))\r\n            dispatch({ type: \"SET_POSTS\", posts: postData.data.listPosts.items })\r\n        } catch (error) {\r\n            console.log(\"error while fetching posts: \", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        user && (\r\n            <div >\r\n                <h1>Welcome back, {user.username}! </h1>\r\n                <Grid \r\n                    container \r\n                    direction=\"column\" \r\n                    justify=\"center\" \r\n                    alignItems=\"center\"\r\n                    spacing={2} \r\n                >\r\n                    <div style={{ width: \"100%\", maxWidth: 600 }}>\r\n                        <PostForm  />\r\n                    </div>\r\n                    {\r\n                        !state.posts.length ? (\r\n                            <Loading />\r\n                        ) : (\r\n                            state.posts.map((post, index) => (\r\n                                <Grid item key={index} style={{ width: \"100%\", maxWidth: 600 }} >\r\n                                    <PostCard post={post} userLoggedIn={user ? user.username : null} />        \r\n                                </Grid>    \r\n                                )\r\n                            )\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\utils\\CheckUser.js",["141"],"import { Auth } from \"aws-amplify\";\r\n\r\nexport const CheckIfUserExists = () => {\r\n    const user = localStorage.getItem(\"amplify-signin-with-hostedUI\");\r\n    console.log(user);\r\n    return user\r\n}","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\private\\ProtectedRoute.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\auth\\SignUp.js",["142","143"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Button, Card, Link, TextField, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport { AppContext } from \"../../context/AppProvider\";\r\n\r\nconst initialState = {\r\n    username: \"\", password: \"\", email: \"\", authCode: \"\", formType: \"signUp\"\r\n}\r\n\r\nfunction SignUp() {\r\n    const { setUserContext } = useContext(AppContext);\r\n    const history = useHistory();\r\n    const [user, setUser] = useState(null);\r\n    const [formState, setFormState] = useState(initialState);\r\n    const [errors, setErrors] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        checkIfUserExists();\r\n    }, [])\r\n\r\n    const checkIfUserExists = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser();\r\n            setUser(user);\r\n            setUserContext(user);\r\n            if (user) {\r\n                history.push(\"/home\")\r\n            }\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setFormState(() => ({ ...formState, [e.target.name]: e.target.value }));\r\n    }\r\n\r\n    const { formType } = formState;\r\n\r\n    const signUpButton = async () => {\r\n        const { username, email, password } = formState;\r\n        if (username.trim() === \"\" || password.trim() === \"\" || email.trim() === \"\") return\r\n        if (username === \"\" || password === \"\" || email === \"\") return\r\n        try {\r\n            setLoading(true);\r\n            await Auth.signUp({ username, password, attributes: { email } });\r\n            setErrors(null)\r\n            setLoading(false);\r\n            setFormState(() => ({ ...formState, formType: \"confirmSignUp\" }));\r\n        } catch (error) {\r\n            console.log(\"Error while signup: \", error)\r\n            setErrors(error.message)\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const confirmSignUpButton = async () => {\r\n        const { username, authCode } = formState;\r\n        if (username.trim() === \"\" || authCode.trim() === \"\") return\r\n        if (username === \"\" || authCode === \"\") return\r\n        setErrors(null)\r\n        try {\r\n            setLoading(true);\r\n            await Auth.confirmSignUp(username, authCode);\r\n            setErrors(null)\r\n            setLoading(false);\r\n            setFormState(() => ({ ...formState, username: \"\", password: \"\", email: \"\", authCode: \"\", formType: \"signUp\" }))\r\n            history.push(\"/signin\")\r\n        } catch (error) {\r\n            console.log(\"Error while confirm signup: \", error)\r\n            setErrors(error.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                formType === \"signUp\" && (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: 20 }} >\r\n                        <Card\r\n                            elevation={3} \r\n                            style={{ \r\n                                width: \"100%\",\r\n                                maxWidth: 600, \r\n                                padding: 15, \r\n                                display: \"flex\", \r\n                                flexDirection: \"column\", \r\n                                alignItems: \"center\"\r\n                            }}\r\n                        >\r\n                            <Typography style={{ marginBottom: 10 }}>\r\n                                Sign Up\r\n                            </Typography>\r\n                            <TextField \r\n                                onChange={onChange}\r\n                                name=\"username\"\r\n                                label=\"Username\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                            />\r\n                            <TextField \r\n                                onChange={onChange}\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                            />\r\n                            <TextField \r\n                                onChange={onChange}\r\n                                name=\"email\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                            />\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                <Typography variant=\"body2\" style={{ marginBottom: 15 }}>\r\n                                    Already have an account?\r\n                                </Typography>\r\n                                &nbsp;\r\n                                <Link href=\"/signin\">Sign in</Link>\r\n                            </div>\r\n                            {loading ? (\r\n                                <CircularProgress />\r\n                            ) : (\r\n                                <Button \r\n                                    style={{ width: 300, textTransform: \"none\", borderRadius: 50, marginBottom: 10 }} \r\n                                    onClick={signUpButton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    Sign Up\r\n                                </Button>\r\n                            )}    \r\n                        </Card>\r\n                        \r\n                        {errors && (\r\n                            <div style={{ width: \"100%\", maxWidth: 600, paddingTop: 20 }}>\r\n                                <Alert severity=\"error\">\r\n                                    <AlertTitle> {errors} </AlertTitle>\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                formType === \"confirmSignUp\" && (\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: 20 }} >\r\n                        <Card\r\n                            elevation={3} \r\n                            style={{ \r\n                                width: \"100%\",\r\n                                maxWidth: 600, \r\n                                padding: 15, \r\n                                display: \"flex\", \r\n                                flexDirection: \"column\", \r\n                                alignItems: \"center\"\r\n                            }}\r\n                        >\r\n                        <Typography variant=\"body2\" style={{ marginBottom: 15 }}>\r\n                            We've sent a verification code to your email\r\n                        </Typography>\r\n                        <TextField \r\n                            onChange={onChange}\r\n                            name=\"authCode\"\r\n                            label=\"Verification code\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            style={{ width: \"100%\", maxWidth: 450, marginBottom: 15 }}\r\n                        />\r\n                        {loading ? (\r\n                            <CircularProgress />\r\n                        ) : (\r\n                            <Button\r\n                                style={{ width: 300, textTransform: \"none\", borderRadius: 50, marginBottom: 10 }} \r\n                                onClick={confirmSignUpButton}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Confirm Sign Up\r\n                            </Button>\r\n                        )}\r\n                        </Card>\r\n                        {errors && (\r\n                            <div style={{ width: \"100%\", maxWidth: 600, paddingTop: 20 }}>\r\n                                <Alert severity=\"error\">\r\n                                    <AlertTitle> {errors} </AlertTitle>\r\n                                </Alert>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n\r\n\r\n","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostCard.js",["144"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Avatar, Card, CardHeader, CardContent, CardActionArea, CardActions, CardMedia, IconButton, makeStyles, Typography\r\n} from \"@material-ui/core\";\r\nimport { red, blue } from \"@material-ui/core/colors\";\r\nimport { FavoriteBorder, QuestionAnswer } from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport PostDeleteButton from \"./PostDeleteButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\"\r\n    }\r\n}));\r\n\r\nfunction PostCard({ post, userLoggedIn }) {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    return (\r\n        <div \r\n            style={{ cursor: \"pointer\" }} \r\n            onClick={() => history.push(`/post/${post.id}`)}\r\n        >\r\n            <Card variant=\"outlined\" elevation={3}>\r\n                <CardHeader\r\n                    avatar={<Avatar />}\r\n                    title={post.createdBy}\r\n                    subheader={moment(post.createdAt).fromNow()}\r\n                    action={post.createdBy === userLoggedIn ? <PostDeleteButton postId={post.id} /> : \"\"}\r\n                />\r\n                <CardContent>\r\n                    <Typography>\r\n                        {post.message}\r\n                    </Typography>\r\n                </CardContent>\r\n                {post.image && (\r\n                    <CardMedia \r\n                        className={classes.media} image={post.image}\r\n                    />\r\n                )}\r\n                <CardActions disableSpacing>\r\n                    <IconButton>\r\n                        <FavoriteBorder style={{ color: red[500] }} />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => history.push(`/post/${post.id}`)} >\r\n                        <QuestionAnswer style={{ color: blue[500] }} />\r\n                    </IconButton>\r\n                    <Typography>\r\n                        {post.comments.items.length}\r\n                    </Typography>\r\n                </CardActions>\r\n                \r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCard;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostForm.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\Navbar.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\context\\AppProvider.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\ThemeToggle.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\styles\\Theme.js",["145"],"import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst light = {\r\n    typography: {\r\n        fontFamily: \"Google Sans, Arial\"\r\n    },\r\n    palette: {\r\n        type: \"light\"\r\n    }\r\n}\r\n\r\nconst dark = {\r\n    typography: {\r\n        fontFamily: \"Google Sans, Arial\"\r\n    },\r\n    palette: {\r\n        type: \"dark\"\r\n    }\r\n}\r\n\r\nconst lightTheme = createMuiTheme(light);\r\nconst darkTheme = createMuiTheme(dark);\r\n\r\nexport default { lightTheme, darkTheme }\r\n","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostDetail.js",["146","147"],"import React, { useEffect, useState } from \"react\";\r\nimport { API, Auth, graphqlOperation, Storage } from \"aws-amplify\";\r\nimport { Avatar, Card, CardHeader, CardContent, CardActions, CircularProgress as Loading, \r\n    IconButton, Grid, Typography \r\n} from \"@material-ui/core\";\r\nimport { FavoriteBorder } from \"@material-ui/icons\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport moment from \"moment\";\r\n\r\nimport * as queries from \"../../graphql/queries\";\r\nimport * as subscriptions from \"../../graphql/subscriptions\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport CommentForm from \"./comment/CommentForm\";\r\nimport CommentCard from \"./comment/CommentCard\";\r\n\r\nfunction PostDetail({ match }) {\r\n    const { id } = match.params;\r\n    const [user, setUser] = useState({});\r\n    const [loadingPost, setLoadingPost] = useState(true);\r\n    const [postDetail, setPostDetail] = useState();\r\n\r\n    useEffect(() => {\r\n        getPostDetail(id);\r\n        checkIfUserExists();\r\n        subscriptionOnCreateComment();\r\n        subscriptionOnDeleteComment();\r\n    }, []);\r\n\r\n    const checkIfUserExists = async () => {\r\n        try {\r\n            const user = await Auth.currentAuthenticatedUser();\r\n            setUser(user);\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const subscriptionOnCreateComment = () => {\r\n        try {\r\n            const subscription = API.graphql(graphqlOperation(subscriptions.onCreateComment)).subscribe({\r\n                next: ({ value }) => {\r\n                    const { post: { id } } = value.data.onCreateComment\r\n                    getPostDetail(id)\r\n                }\r\n            })\r\n            return () => subscription.unsubscribe();\r\n        } catch (error) {\r\n            console.log(\"error on subscription onCreateComment: \", error)\r\n        }\r\n    }\r\n\r\n    const subscriptionOnDeleteComment = () => {\r\n        try {\r\n            const subscription = API.graphql(graphqlOperation(subscriptions.onDeleteComment)).subscribe({\r\n                next: ({ value }) => {\r\n                    const { post: { id } } = value.data.onDeleteComment\r\n                    getPostDetail(id);\r\n                }\r\n            })\r\n            return () => subscription.unsubscribe();\r\n        } catch (error) {\r\n            console.log(\"error on subscription onDeleteComment: \", error);\r\n        }\r\n    }\r\n\r\n    const getPostDetail = async (id) => {\r\n        try {\r\n            const post = await API.graphql(graphqlOperation(queries.getPost, { id: id }));\r\n            const postFromApi = post.data.getPost\r\n            postFromApi !== null ? setPostDetail(postFromApi) : setPostDetail(null);\r\n        } catch (error) {\r\n            console.log(\"Error while fetching post: \", error);\r\n        }\r\n        setLoadingPost(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                style={{ marginTop: 10 }}\r\n            >\r\n                {loadingPost ? (\r\n                    <Loading />\r\n                ):(\r\n                    !postDetail ? (\r\n                        // <h5>F</h5>\r\n                        <PostNotFound />\r\n                    ) : (\r\n                        <Grid \r\n                            item style={{ width: \"100%\", maxWidth: 600 }}\r\n                        >\r\n                            <Card variant=\"outlined\" elevation={3} style={{ marginBottom: 15 }} >\r\n                                <CardHeader avatar={<Avatar />} title={postDetail.createdBy} />\r\n                                <CardContent>\r\n                                    {postDetail.message && (\r\n                                        <Typography variant=\"h5\">\r\n                                            {postDetail.message}\r\n                                        </Typography>\r\n                                    )}\r\n                                </CardContent>\r\n                                {postDetail.image && (\r\n                                    <img src={postDetail.image} \r\n                                        style={{ height: \"100%\", width: \"100%\", objectFit: \"contain\" }}  alt=\"\"\r\n                                    />\r\n                                )}\r\n                                <CardActions style={{ paddingLeft: 15 }}>\r\n                                    <Typography variant=\"body2\">\r\n                                        {moment(postDetail.createdAt).format(\"h:m a - DD MMMM YYYY\")}\r\n                                    </Typography>\r\n                                </CardActions>\r\n                                <CardActions style={{ paddingLeft: 15 }} >\r\n                                    <Typography variant=\"caption\"> 12 likes </Typography>\r\n                                    <Typography variant=\"caption\"> {postDetail.comments.items.length} comments </Typography>\r\n                                </CardActions>\r\n                                <CardActions>\r\n                                    <IconButton>\r\n                                        <FavoriteBorder style={{ color: red[500] }} />\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                            </Card>\r\n                            <CommentForm postId={postDetail.id} />\r\n                            {postDetail.comments.items.map((comment, index) => (\r\n                                <div key={index}>\r\n                                    <CommentCard \r\n                                        comment={comment}\r\n                                        userLoggedIn={user ? user.username : null }\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </Grid>\r\n                    )\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostDetail;","C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentForm.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentCard.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\comment\\CommentDeleteButton.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostDeleteButton.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\navbar\\DropMenu.js",[],"C:\\Users\\Felipe\\Documents\\MEGA\\dev\\react\\amplify-gql-media\\src\\components\\post\\PostNotFound.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"150","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":20,"column":12,"nodeType":"156","messageId":"157","endLine":20,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":10,"suggestions":"161"},{"ruleId":"148","replacedBy":"162"},{"ruleId":"150","replacedBy":"163"},{"ruleId":"154","severity":1,"message":"155","line":20,"column":12,"nodeType":"156","messageId":"157","endLine":20,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":25,"column":8,"nodeType":"160","endLine":25,"endColumn":10,"suggestions":"164"},{"ruleId":"148","replacedBy":"165"},{"ruleId":"150","replacedBy":"166"},{"ruleId":"154","severity":1,"message":"155","line":15,"column":12,"nodeType":"156","messageId":"157","endLine":15,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":21,"column":8,"nodeType":"160","endLine":21,"endColumn":10,"suggestions":"168"},{"ruleId":"154","severity":1,"message":"169","line":1,"column":29,"nodeType":"156","messageId":"157","endLine":1,"endColumn":37},{"ruleId":"154","severity":1,"message":"170","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":16,"column":12,"nodeType":"156","messageId":"157","endLine":16,"endColumn":16},{"ruleId":"158","severity":1,"message":"167","line":23,"column":8,"nodeType":"160","endLine":23,"endColumn":10,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"172","line":4,"column":44,"nodeType":"156","messageId":"157","endLine":4,"endColumn":58},{"ruleId":"173","severity":1,"message":"174","line":24,"column":1,"nodeType":"175","endLine":24,"endColumn":41},{"ruleId":"154","severity":1,"message":"176","line":2,"column":39,"nodeType":"156","messageId":"157","endLine":2,"endColumn":46},{"ruleId":"158","severity":1,"message":"177","line":27,"column":8,"nodeType":"160","endLine":27,"endColumn":10,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkUser' and 'setAuthListener'. Either include them or remove the dependency array.","ArrayExpression",["181"],["179"],["180"],["182"],["179"],["180"],"React Hook useEffect has a missing dependency: 'checkIfUserExists'. Either include it or remove the dependency array.",["183"],"'useState' is defined but never used.","'Auth' is defined but never used.",["184"],"'CardActionArea' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Storage' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'subscriptionOnCreateComment', and 'subscriptionOnDeleteComment'. Either include them or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [checkUser, setAuthListener]",{"range":"194","text":"195"},{"range":"196","text":"195"},"Update the dependencies array to be: [checkIfUserExists]",{"range":"197","text":"198"},{"range":"199","text":"198"},"Update the dependencies array to be: [id, subscriptionOnCreateComment, subscriptionOnDeleteComment]",{"range":"200","text":"201"},[711,713],"[checkUser, setAuthListener]",[711,713],[791,793],"[checkIfUserExists]",[853,855],[1066,1068],"[id, subscriptionOnCreateComment, subscriptionOnDeleteComment]"]